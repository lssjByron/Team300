# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-03-10 22:53
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Addr',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('tlid', models.BigIntegerField(blank=True, null=True)),
                ('fromhn', models.CharField(blank=True, max_length=12, null=True)),
                ('tohn', models.CharField(blank=True, max_length=12, null=True)),
                ('side', models.CharField(blank=True, max_length=1, null=True)),
                ('zip', models.CharField(blank=True, max_length=5, null=True)),
                ('plus4', models.CharField(blank=True, max_length=4, null=True)),
                ('fromtyp', models.CharField(blank=True, max_length=1, null=True)),
                ('totyp', models.CharField(blank=True, max_length=1, null=True)),
                ('fromarmid', models.IntegerField(blank=True, null=True)),
                ('toarmid', models.IntegerField(blank=True, null=True)),
                ('arid', models.CharField(blank=True, max_length=22, null=True)),
                ('mtfcc', models.CharField(blank=True, max_length=5, null=True)),
                ('statefp', models.CharField(blank=True, max_length=2, null=True)),
            ],
            options={
                'db_table': 'addr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Addrfeat',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('tlid', models.BigIntegerField(blank=True, null=True)),
                ('statefp', models.CharField(max_length=2)),
                ('aridl', models.CharField(blank=True, max_length=22, null=True)),
                ('aridr', models.CharField(blank=True, max_length=22, null=True)),
                ('linearid', models.CharField(blank=True, max_length=22, null=True)),
                ('fullname', models.CharField(blank=True, max_length=100, null=True)),
                ('lfromhn', models.CharField(blank=True, max_length=12, null=True)),
                ('ltohn', models.CharField(blank=True, max_length=12, null=True)),
                ('rfromhn', models.CharField(blank=True, max_length=12, null=True)),
                ('rtohn', models.CharField(blank=True, max_length=12, null=True)),
                ('zipl', models.CharField(blank=True, max_length=5, null=True)),
                ('zipr', models.CharField(blank=True, max_length=5, null=True)),
                ('edge_mtfcc', models.CharField(blank=True, max_length=5, null=True)),
                ('parityl', models.CharField(blank=True, max_length=1, null=True)),
                ('parityr', models.CharField(blank=True, max_length=1, null=True)),
                ('plus4l', models.CharField(blank=True, max_length=4, null=True)),
                ('plus4r', models.CharField(blank=True, max_length=4, null=True)),
                ('lfromtyp', models.CharField(blank=True, max_length=1, null=True)),
                ('ltotyp', models.CharField(blank=True, max_length=1, null=True)),
                ('rfromtyp', models.CharField(blank=True, max_length=1, null=True)),
                ('rtotyp', models.CharField(blank=True, max_length=1, null=True)),
                ('offsetl', models.CharField(blank=True, max_length=1, null=True)),
                ('offsetr', models.CharField(blank=True, max_length=1, null=True)),
                ('the_geom', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'addrfeat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bg',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('statefp', models.CharField(blank=True, max_length=2, null=True)),
                ('countyfp', models.CharField(blank=True, max_length=3, null=True)),
                ('tractce', models.CharField(blank=True, max_length=6, null=True)),
                ('blkgrpce', models.CharField(blank=True, max_length=1, null=True)),
                ('bg_id', models.CharField(max_length=12, primary_key=True)),
                ('namelsad', models.CharField(blank=True, max_length=13, null=True)),
                ('mtfcc', models.CharField(blank=True, max_length=5, null=True)),
                ('funcstat', models.CharField(blank=True, max_length=1, null=True)),
                ('aland', models.FloatField(blank=True, null=True)),
                ('awater', models.FloatField(blank=True, null=True)),
                ('intptlat', models.CharField(blank=True, max_length=11, null=True)),
                ('intptlon', models.CharField(blank=True, max_length=12, null=True)),
                ('the_geom', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Checker',
            fields=[
                ('pid', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'checker',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('gid', models.AutoField(primary_key=True)),
                ('statefp', models.CharField(blank=True, max_length=2, null=True)),
                ('countyfp', models.CharField(blank=True, max_length=3, null=True)),
                ('countyns', models.CharField(blank=True, max_length=8, null=True)),
                ('cntyidfp', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('namelsad', models.CharField(blank=True, max_length=100, null=True)),
                ('lsad', models.CharField(blank=True, max_length=2, null=True)),
                ('classfp', models.CharField(blank=True, max_length=2, null=True)),
                ('mtfcc', models.CharField(blank=True, max_length=5, null=True)),
                ('csafp', models.CharField(blank=True, max_length=3, null=True)),
                ('cbsafp', models.CharField(blank=True, max_length=5, null=True)),
                ('metdivfp', models.CharField(blank=True, max_length=5, null=True)),
                ('funcstat', models.CharField(blank=True, max_length=1, null=True)),
                ('aland', models.BigIntegerField(blank=True, null=True)),
                ('awater', models.FloatField(blank=True, null=True)),
                ('intptlat', models.CharField(blank=True, max_length=11, null=True)),
                ('intptlon', models.CharField(blank=True, max_length=12, null=True)),
                ('the_geom', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'county',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CountyLookup',
            fields=[
                ('st_code', models.IntegerField(primary_key=True, serialize=False)),
                ('state', models.CharField(blank=True, max_length=2, null=True)),
                ('co_code', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=90, null=True)),
            ],
            options={
                'db_table': 'county_lookup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CountysubLookup',
            fields=[
                ('st_code', models.IntegerField(primary_key=True, serialize=False)),
                ('state', models.CharField(blank=True, max_length=2, null=True)),
                ('co_code', models.IntegerField()),
                ('county', models.CharField(blank=True, max_length=90, null=True)),
                ('cs_code', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=90, null=True)),
            ],
            options={
                'db_table': 'countysub_lookup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cousub',
            fields=[
                ('gid', models.AutoField(primary_key=True)),
                ('statefp', models.CharField(blank=True, max_length=2, null=True)),
                ('countyfp', models.CharField(blank=True, max_length=3, null=True)),
                ('cousubfp', models.CharField(blank=True, max_length=5, null=True)),
                ('cousubns', models.CharField(blank=True, max_length=8, null=True)),
                ('cosbidfp', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('namelsad', models.CharField(blank=True, max_length=100, null=True)),
                ('lsad', models.CharField(blank=True, max_length=2, null=True)),
                ('classfp', models.CharField(blank=True, max_length=2, null=True)),
                ('mtfcc', models.CharField(blank=True, max_length=5, null=True)),
                ('cnectafp', models.CharField(blank=True, max_length=3, null=True)),
                ('nectafp', models.CharField(blank=True, max_length=5, null=True)),
                ('nctadvfp', models.CharField(blank=True, max_length=5, null=True)),
                ('funcstat', models.CharField(blank=True, max_length=1, null=True)),
                ('aland', models.DecimalField(blank=True, decimal_places=0, max_digits=14, null=True)),
                ('awater', models.DecimalField(blank=True, decimal_places=0, max_digits=14, null=True)),
                ('intptlat', models.CharField(blank=True, max_length=11, null=True)),
                ('intptlon', models.CharField(blank=True, max_length=12, null=True)),
                ('the_geom', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cousub',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DirectionLookup',
            fields=[
                ('name', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('abbrev', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'db_table': 'direction_lookup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Edges',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('statefp', models.CharField(blank=True, max_length=2, null=True)),
                ('countyfp', models.CharField(blank=True, max_length=3, null=True)),
                ('tlid', models.BigIntegerField(blank=True, null=True)),
                ('tfidl', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('tfidr', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('mtfcc', models.CharField(blank=True, max_length=5, null=True)),
                ('fullname', models.CharField(blank=True, max_length=100, null=True)),
                ('smid', models.CharField(blank=True, max_length=22, null=True)),
                ('lfromadd', models.CharField(blank=True, max_length=12, null=True)),
                ('ltoadd', models.CharField(blank=True, max_length=12, null=True)),
                ('rfromadd', models.CharField(blank=True, max_length=12, null=True)),
                ('rtoadd', models.CharField(blank=True, max_length=12, null=True)),
                ('zipl', models.CharField(blank=True, max_length=5, null=True)),
                ('zipr', models.CharField(blank=True, max_length=5, null=True)),
                ('featcat', models.CharField(blank=True, max_length=1, null=True)),
                ('hydroflg', models.CharField(blank=True, max_length=1, null=True)),
                ('railflg', models.CharField(blank=True, max_length=1, null=True)),
                ('roadflg', models.CharField(blank=True, max_length=1, null=True)),
                ('olfflg', models.CharField(blank=True, max_length=1, null=True)),
                ('passflg', models.CharField(blank=True, max_length=1, null=True)),
                ('divroad', models.CharField(blank=True, max_length=1, null=True)),
                ('exttyp', models.CharField(blank=True, max_length=1, null=True)),
                ('ttyp', models.CharField(blank=True, max_length=1, null=True)),
                ('deckedroad', models.CharField(blank=True, max_length=1, null=True)),
                ('artpath', models.CharField(blank=True, max_length=1, null=True)),
                ('persist', models.CharField(blank=True, max_length=1, null=True)),
                ('gcseflg', models.CharField(blank=True, max_length=1, null=True)),
                ('offsetl', models.CharField(blank=True, max_length=1, null=True)),
                ('offsetr', models.CharField(blank=True, max_length=1, null=True)),
                ('tnidf', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('tnidt', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('the_geom', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'edges',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Faces',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('tfid', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('statefp00', models.CharField(blank=True, max_length=2, null=True)),
                ('countyfp00', models.CharField(blank=True, max_length=3, null=True)),
                ('tractce00', models.CharField(blank=True, max_length=6, null=True)),
                ('blkgrpce00', models.CharField(blank=True, max_length=1, null=True)),
                ('blockce00', models.CharField(blank=True, max_length=4, null=True)),
                ('cousubfp00', models.CharField(blank=True, max_length=5, null=True)),
                ('submcdfp00', models.CharField(blank=True, max_length=5, null=True)),
                ('conctyfp00', models.CharField(blank=True, max_length=5, null=True)),
                ('placefp00', models.CharField(blank=True, max_length=5, null=True)),
                ('aiannhfp00', models.CharField(blank=True, max_length=5, null=True)),
                ('aiannhce00', models.CharField(blank=True, max_length=4, null=True)),
                ('comptyp00', models.CharField(blank=True, max_length=1, null=True)),
                ('trsubfp00', models.CharField(blank=True, max_length=5, null=True)),
                ('trsubce00', models.CharField(blank=True, max_length=3, null=True)),
                ('anrcfp00', models.CharField(blank=True, max_length=5, null=True)),
                ('elsdlea00', models.CharField(blank=True, max_length=5, null=True)),
                ('scsdlea00', models.CharField(blank=True, max_length=5, null=True)),
                ('unsdlea00', models.CharField(blank=True, max_length=5, null=True)),
                ('uace00', models.CharField(blank=True, max_length=5, null=True)),
                ('cd108fp', models.CharField(blank=True, max_length=2, null=True)),
                ('sldust00', models.CharField(blank=True, max_length=3, null=True)),
                ('sldlst00', models.CharField(blank=True, max_length=3, null=True)),
                ('vtdst00', models.CharField(blank=True, max_length=6, null=True)),
                ('zcta5ce00', models.CharField(blank=True, max_length=5, null=True)),
                ('tazce00', models.CharField(blank=True, max_length=6, null=True)),
                ('ugace00', models.CharField(blank=True, max_length=5, null=True)),
                ('puma5ce00', models.CharField(blank=True, max_length=5, null=True)),
                ('statefp', models.CharField(blank=True, max_length=2, null=True)),
                ('countyfp', models.CharField(blank=True, max_length=3, null=True)),
                ('tractce', models.CharField(blank=True, max_length=6, null=True)),
                ('blkgrpce', models.CharField(blank=True, max_length=1, null=True)),
                ('blockce', models.CharField(blank=True, max_length=4, null=True)),
                ('cousubfp', models.CharField(blank=True, max_length=5, null=True)),
                ('submcdfp', models.CharField(blank=True, max_length=5, null=True)),
                ('conctyfp', models.CharField(blank=True, max_length=5, null=True)),
                ('placefp', models.CharField(blank=True, max_length=5, null=True)),
                ('aiannhfp', models.CharField(blank=True, max_length=5, null=True)),
                ('aiannhce', models.CharField(blank=True, max_length=4, null=True)),
                ('comptyp', models.CharField(blank=True, max_length=1, null=True)),
                ('trsubfp', models.CharField(blank=True, max_length=5, null=True)),
                ('trsubce', models.CharField(blank=True, max_length=3, null=True)),
                ('anrcfp', models.CharField(blank=True, max_length=5, null=True)),
                ('ttractce', models.CharField(blank=True, max_length=6, null=True)),
                ('tblkgpce', models.CharField(blank=True, max_length=1, null=True)),
                ('elsdlea', models.CharField(blank=True, max_length=5, null=True)),
                ('scsdlea', models.CharField(blank=True, max_length=5, null=True)),
                ('unsdlea', models.CharField(blank=True, max_length=5, null=True)),
                ('uace', models.CharField(blank=True, max_length=5, null=True)),
                ('cd111fp', models.CharField(blank=True, max_length=2, null=True)),
                ('sldust', models.CharField(blank=True, max_length=3, null=True)),
                ('sldlst', models.CharField(blank=True, max_length=3, null=True)),
                ('vtdst', models.CharField(blank=True, max_length=6, null=True)),
                ('zcta5ce', models.CharField(blank=True, max_length=5, null=True)),
                ('tazce', models.CharField(blank=True, max_length=6, null=True)),
                ('ugace', models.CharField(blank=True, max_length=5, null=True)),
                ('puma5ce', models.CharField(blank=True, max_length=5, null=True)),
                ('csafp', models.CharField(blank=True, max_length=3, null=True)),
                ('cbsafp', models.CharField(blank=True, max_length=5, null=True)),
                ('metdivfp', models.CharField(blank=True, max_length=5, null=True)),
                ('cnectafp', models.CharField(blank=True, max_length=3, null=True)),
                ('nectafp', models.CharField(blank=True, max_length=5, null=True)),
                ('nctadvfp', models.CharField(blank=True, max_length=5, null=True)),
                ('lwflag', models.CharField(blank=True, max_length=1, null=True)),
                ('offset', models.CharField(blank=True, max_length=1, null=True)),
                ('atotal', models.FloatField(blank=True, null=True)),
                ('intptlat', models.CharField(blank=True, max_length=11, null=True)),
                ('intptlon', models.CharField(blank=True, max_length=12, null=True)),
                ('the_geom', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'faces',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Featnames',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('tlid', models.BigIntegerField(blank=True, null=True)),
                ('fullname', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('predirabrv', models.CharField(blank=True, max_length=15, null=True)),
                ('pretypabrv', models.CharField(blank=True, max_length=50, null=True)),
                ('prequalabr', models.CharField(blank=True, max_length=15, null=True)),
                ('sufdirabrv', models.CharField(blank=True, max_length=15, null=True)),
                ('suftypabrv', models.CharField(blank=True, max_length=50, null=True)),
                ('sufqualabr', models.CharField(blank=True, max_length=15, null=True)),
                ('predir', models.CharField(blank=True, max_length=2, null=True)),
                ('pretyp', models.CharField(blank=True, max_length=3, null=True)),
                ('prequal', models.CharField(blank=True, max_length=2, null=True)),
                ('sufdir', models.CharField(blank=True, max_length=2, null=True)),
                ('suftyp', models.CharField(blank=True, max_length=3, null=True)),
                ('sufqual', models.CharField(blank=True, max_length=2, null=True)),
                ('linearid', models.CharField(blank=True, max_length=22, null=True)),
                ('mtfcc', models.CharField(blank=True, max_length=5, null=True)),
                ('paflag', models.CharField(blank=True, max_length=1, null=True)),
                ('statefp', models.CharField(blank=True, max_length=2, null=True)),
            ],
            options={
                'db_table': 'featnames',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeocodeSettings',
            fields=[
                ('name', models.TextField(primary_key=True, serialize=False)),
                ('setting', models.TextField(blank=True, null=True)),
                ('unit', models.TextField(blank=True, null=True)),
                ('category', models.TextField(blank=True, null=True)),
                ('short_desc', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'geocode_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeocodeSettingsDefault',
            fields=[
                ('name', models.TextField(primary_key=True, serialize=False)),
                ('setting', models.TextField(blank=True, null=True)),
                ('unit', models.TextField(blank=True, null=True)),
                ('category', models.TextField(blank=True, null=True)),
                ('short_desc', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'geocode_settings_default',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Layer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('layer_id', models.IntegerField()),
                ('schema_name', models.CharField(max_length=100)),
                ('table_name', models.CharField(max_length=100)),
                ('feature_column', models.CharField(max_length=100)),
                ('feature_type', models.IntegerField()),
                ('level', models.IntegerField()),
                ('child_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'layer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LoaderLookuptables',
            fields=[
                ('process_order', models.IntegerField()),
                ('lookup_name', models.TextField(primary_key=True, serialize=False)),
                ('table_name', models.TextField(blank=True, null=True)),
                ('single_mode', models.BooleanField()),
                ('load', models.BooleanField()),
                ('level_county', models.BooleanField()),
                ('level_state', models.BooleanField()),
                ('level_nation', models.BooleanField()),
                ('post_load_process', models.TextField(blank=True, null=True)),
                ('single_geom_mode', models.NullBooleanField()),
                ('insert_mode', models.CharField(max_length=1)),
                ('pre_load_process', models.TextField(blank=True, null=True)),
                ('columns_exclude', models.TextField(blank=True, null=True)),
                ('website_root_override', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'loader_lookuptables',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LoaderPlatform',
            fields=[
                ('os', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('declare_sect', models.TextField(blank=True, null=True)),
                ('pgbin', models.TextField(blank=True, null=True)),
                ('wget', models.TextField(blank=True, null=True)),
                ('unzip_command', models.TextField(blank=True, null=True)),
                ('psql', models.TextField(blank=True, null=True)),
                ('path_sep', models.TextField(blank=True, null=True)),
                ('loader', models.TextField(blank=True, null=True)),
                ('environ_set_command', models.TextField(blank=True, null=True)),
                ('county_process_command', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'loader_platform',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LoaderVariables',
            fields=[
                ('tiger_year', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('website_root', models.TextField(blank=True, null=True)),
                ('staging_fold', models.TextField(blank=True, null=True)),
                ('data_schema', models.TextField(blank=True, null=True)),
                ('staging_schema', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'loader_variables',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PagcGaz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seq', models.IntegerField(blank=True, null=True)),
                ('word', models.TextField(blank=True, null=True)),
                ('stdword', models.TextField(blank=True, null=True)),
                ('token', models.IntegerField(blank=True, null=True)),
                ('is_custom', models.BooleanField()),
            ],
            options={
                'db_table': 'pagc_gaz',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PagcLex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seq', models.IntegerField(blank=True, null=True)),
                ('word', models.TextField(blank=True, null=True)),
                ('stdword', models.TextField(blank=True, null=True)),
                ('token', models.IntegerField(blank=True, null=True)),
                ('is_custom', models.BooleanField()),
            ],
            options={
                'db_table': 'pagc_lex',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PagcRules',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule', models.TextField(blank=True, null=True)),
                ('is_custom', models.NullBooleanField()),
            ],
            options={
                'db_table': 'pagc_rules',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('gid', models.AutoField(primary_key=True)),
                ('statefp', models.CharField(blank=True, max_length=2, null=True)),
                ('placefp', models.CharField(blank=True, max_length=5, null=True)),
                ('placens', models.CharField(blank=True, max_length=8, null=True)),
                ('plcidfp', models.CharField(max_length=7, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('namelsad', models.CharField(blank=True, max_length=100, null=True)),
                ('lsad', models.CharField(blank=True, max_length=2, null=True)),
                ('classfp', models.CharField(blank=True, max_length=2, null=True)),
                ('cpi', models.CharField(blank=True, max_length=1, null=True)),
                ('pcicbsa', models.CharField(blank=True, max_length=1, null=True)),
                ('pcinecta', models.CharField(blank=True, max_length=1, null=True)),
                ('mtfcc', models.CharField(blank=True, max_length=5, null=True)),
                ('funcstat', models.CharField(blank=True, max_length=1, null=True)),
                ('aland', models.BigIntegerField(blank=True, null=True)),
                ('awater', models.BigIntegerField(blank=True, null=True)),
                ('intptlat', models.CharField(blank=True, max_length=11, null=True)),
                ('intptlon', models.CharField(blank=True, max_length=12, null=True)),
                ('the_geom', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'place',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlaceLookup',
            fields=[
                ('st_code', models.IntegerField(primary_key=True, serialize=False)),
                ('state', models.CharField(blank=True, max_length=2, null=True)),
                ('pl_code', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=90, null=True)),
            ],
            options={
                'db_table': 'place_lookup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PointcloudFormats',
            fields=[
                ('pcid', models.IntegerField(primary_key=True, serialize=False)),
                ('srid', models.IntegerField(blank=True, null=True)),
                ('schema', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pointcloud_formats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SecondaryUnitLookup',
            fields=[
                ('name', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('abbrev', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'secondary_unit_lookup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpatialRefSys',
            fields=[
                ('srid', models.IntegerField(primary_key=True, serialize=False)),
                ('auth_name', models.CharField(blank=True, max_length=256, null=True)),
                ('auth_srid', models.IntegerField(blank=True, null=True)),
                ('srtext', models.CharField(blank=True, max_length=2048, null=True)),
                ('proj4text', models.CharField(blank=True, max_length=2048, null=True)),
            ],
            options={
                'db_table': 'spatial_ref_sys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('region', models.CharField(blank=True, max_length=2, null=True)),
                ('division', models.CharField(blank=True, max_length=2, null=True)),
                ('statefp', models.CharField(max_length=2, primary_key=True)),
                ('statens', models.CharField(blank=True, max_length=8, null=True)),
                ('stusps', models.CharField(max_length=2, unique=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('lsad', models.CharField(blank=True, max_length=2, null=True)),
                ('mtfcc', models.CharField(blank=True, max_length=5, null=True)),
                ('funcstat', models.CharField(blank=True, max_length=1, null=True)),
                ('aland', models.BigIntegerField(blank=True, null=True)),
                ('awater', models.BigIntegerField(blank=True, null=True)),
                ('intptlat', models.CharField(blank=True, max_length=11, null=True)),
                ('intptlon', models.CharField(blank=True, max_length=12, null=True)),
                ('the_geom', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StateLookup',
            fields=[
                ('st_code', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=40, null=True, unique=True)),
                ('abbrev', models.CharField(blank=True, max_length=3, null=True, unique=True)),
                ('statefp', models.CharField(blank=True, max_length=2, null=True, unique=True)),
            ],
            options={
                'db_table': 'state_lookup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StreetTypeLookup',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('abbrev', models.CharField(blank=True, max_length=50, null=True)),
                ('is_hw', models.BooleanField()),
            ],
            options={
                'db_table': 'street_type_lookup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tabblock',
            fields=[
                ('gid', models.AutoField(primary_key=True)),
                ('statefp', models.CharField(blank=True, max_length=2, null=True)),
                ('countyfp', models.CharField(blank=True, max_length=3, null=True)),
                ('tractce', models.CharField(blank=True, max_length=6, null=True)),
                ('blockce', models.CharField(blank=True, max_length=4, null=True)),
                ('tabblock_id', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('mtfcc', models.CharField(blank=True, max_length=5, null=True)),
                ('ur', models.CharField(blank=True, max_length=1, null=True)),
                ('uace', models.CharField(blank=True, max_length=5, null=True)),
                ('funcstat', models.CharField(blank=True, max_length=1, null=True)),
                ('aland', models.FloatField(blank=True, null=True)),
                ('awater', models.FloatField(blank=True, null=True)),
                ('intptlat', models.CharField(blank=True, max_length=11, null=True)),
                ('intptlon', models.CharField(blank=True, max_length=12, null=True)),
                ('the_geom', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tabblock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Topology',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('srid', models.IntegerField()),
                ('precision', models.FloatField()),
                ('hasz', models.BooleanField()),
            ],
            options={
                'db_table': 'topology',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tract',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('statefp', models.CharField(blank=True, max_length=2, null=True)),
                ('countyfp', models.CharField(blank=True, max_length=3, null=True)),
                ('tractce', models.CharField(blank=True, max_length=6, null=True)),
                ('tract_id', models.CharField(max_length=11, primary_key=True)),
                ('name', models.CharField(blank=True, max_length=7, null=True)),
                ('namelsad', models.CharField(blank=True, max_length=20, null=True)),
                ('mtfcc', models.CharField(blank=True, max_length=5, null=True)),
                ('funcstat', models.CharField(blank=True, max_length=1, null=True)),
                ('aland', models.FloatField(blank=True, null=True)),
                ('awater', models.FloatField(blank=True, null=True)),
                ('intptlat', models.CharField(blank=True, max_length=11, null=True)),
                ('intptlon', models.CharField(blank=True, max_length=12, null=True)),
                ('the_geom', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tract',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Zcta5',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('statefp', models.CharField(max_length=2)),
                ('zcta5ce', models.CharField(max_length=5, primary_key=True)),
                ('classfp', models.CharField(blank=True, max_length=2, null=True)),
                ('mtfcc', models.CharField(blank=True, max_length=5, null=True)),
                ('funcstat', models.CharField(blank=True, max_length=1, null=True)),
                ('aland', models.FloatField(blank=True, null=True)),
                ('awater', models.FloatField(blank=True, null=True)),
                ('intptlat', models.CharField(blank=True, max_length=11, null=True)),
                ('intptlon', models.CharField(blank=True, max_length=12, null=True)),
                ('partflg', models.CharField(blank=True, max_length=1, null=True)),
                ('the_geom', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'zcta5',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ZipLookup',
            fields=[
                ('zip', models.IntegerField(primary_key=True, serialize=False)),
                ('st_code', models.IntegerField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=2, null=True)),
                ('co_code', models.IntegerField(blank=True, null=True)),
                ('county', models.CharField(blank=True, max_length=90, null=True)),
                ('cs_code', models.IntegerField(blank=True, null=True)),
                ('cousub', models.CharField(blank=True, max_length=90, null=True)),
                ('pl_code', models.IntegerField(blank=True, null=True)),
                ('place', models.CharField(blank=True, max_length=90, null=True)),
                ('cnt', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'zip_lookup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ZipLookupAll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zip', models.IntegerField(blank=True, null=True)),
                ('st_code', models.IntegerField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=2, null=True)),
                ('co_code', models.IntegerField(blank=True, null=True)),
                ('county', models.CharField(blank=True, max_length=90, null=True)),
                ('cs_code', models.IntegerField(blank=True, null=True)),
                ('cousub', models.CharField(blank=True, max_length=90, null=True)),
                ('pl_code', models.IntegerField(blank=True, null=True)),
                ('place', models.CharField(blank=True, max_length=90, null=True)),
                ('cnt', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'zip_lookup_all',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ZipLookupBase',
            fields=[
                ('zip', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('state', models.CharField(blank=True, max_length=40, null=True)),
                ('county', models.CharField(blank=True, max_length=90, null=True)),
                ('city', models.CharField(blank=True, max_length=90, null=True)),
                ('statefp', models.CharField(blank=True, max_length=2, null=True)),
            ],
            options={
                'db_table': 'zip_lookup_base',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ZipState',
            fields=[
                ('zip', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('stusps', models.CharField(max_length=2)),
                ('statefp', models.CharField(blank=True, max_length=2, null=True)),
            ],
            options={
                'db_table': 'zip_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ZipStateLoc',
            fields=[
                ('zip', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('stusps', models.CharField(max_length=2)),
                ('statefp', models.CharField(blank=True, max_length=2, null=True)),
                ('place', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'zip_state_loc',
                'managed': False,
            },
        ),
    ]
